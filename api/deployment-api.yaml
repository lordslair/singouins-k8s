apiVersion: apps/v1
kind: Deployment

metadata:
  namespace: singouins
  name: sep-backend-api
  labels:
    tier: sep-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
      tier: sep-backend
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5000"
      labels:
        app: api
        tier: sep-backend
    spec:

      initContainers:
      - name: sep-backend-api-init
        image: busybox
        volumeMounts:
        - name: code
          mountPath: /code
        command: ["/bin/sh"]
        args: [
         "-c",
         "(
              wget   https://github.com/lordslair/sep-backend/archive/master.zip -O /tmp/sep.zip &&
              wget -q https://api.github.com/repos/lordslair/sep-backend/commits/master -O - 2&>1 | grep '^  .sha' | cut -d'\"' -f4 > /code/.git &&
              unzip  /tmp/sep.zip -d /tmp/ &&
              cp -a  /tmp/sep-backend-master/api/* /code/ &&
              rm -rf /tmp/sep-backend-master &&
              rm -rf /tmp/sep.zip
          ) || echo 1"
        ]

      containers:
      - name: sep-backend-api
        image: alpine:3.12
        resources:
          limits:
            memory: 256Mi
            cpu: 1000m
          requests:
            memory: 128Mi
            cpu: 50m
        command: ["/code/entrypoint.sh"]
        env:
        - name: FLASK_DEBUG
          value: '--debugger'
        - name: FLASK_THREAD
          value: '--without-threads'
        - name: FLASK_ENV
          value: 'development'
        - name: FLASK_APP
          value: '/code/app.py'
        - name: FLASK_HOST
          value: '0.0.0.0'
        - name: FLASK_PORT
          value: '5000'
        - name: SEP_URL
          value: 'https://api.proto.singouins.com'
        - name: SEP_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: sep-backend-api-secret
              key: jwt-secret
        - name: SEP_MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: sep-backend-api-secret
              key: sql-user
        - name: SEP_MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sep-backend-api-secret
              key: sql-pass
        - name: SEP_MYSQL_DB
          valueFrom:
            secretKeyRef:
              name: sep-backend-api-secret
              key: sql-user
        - name: SEP_MYSQL_HOST
          valueFrom:
            secretKeyRef:
              name: sep-backend-backup-secret
              key: dbhost
        - name: SEP_SMTP_FROM
          valueFrom:
            secretKeyRef:
              name: sep-backend-api-secret
              key: smtp-from
        - name: SEP_SMTP_SERVER
          valueFrom:
            secretKeyRef:
              name: sep-backend-api-secret
              key: smtp-server
        - name: SEP_SMTP_USER
          valueFrom:
            secretKeyRef:
              name: sep-backend-api-secret
              key: smtp-user
        - name: SEP_SMTP_PASS
          valueFrom:
            secretKeyRef:
              name: sep-backend-api-secret
              key: smtp-pass
        - name: SEP_SMTP_HOSTNAME
          valueFrom:
            secretKeyRef:
              name: sep-backend-api-secret
              key: smtp-host
        - name: SEP_PCS_URL
          valueFrom:
            secretKeyRef:
              name: sep-backend-api-secret
              key: pcs-url
        - name: SEP_DISCORD_URL
          valueFrom:
            secretKeyRef:
              name: sep-backend-discord-secret
              key: invite-url
        - name: DEBUG_METRICS
          value: 'true'
        volumeMounts:
        - mountPath: /code
          name: code
      restartPolicy: Always

      volumes:
      - name: code
        persistentVolumeClaim:
          claimName: sep-backend-code-api
